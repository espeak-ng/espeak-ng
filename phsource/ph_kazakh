
// use "flag1" for soft vowels

// short vowels

phoneme I
  vwl starttype #@ endtype #@
  flag1
  length 100
  IF thisPh(isWordEnd) THEN
    length 140
  ENDIF
  FMT(vowel/ii#)
endphoneme

phoneme 8
  vwl starttype #@ endtype #@
  length 100
  IF thisPh(isWordEnd) THEN
    length 140
  ENDIF
  FMT(vowel/8)
endphoneme

phoneme u#
  vwl starttype #u endtype #u
  length 100
  flag1
  IF thisPh(isWordEnd) THEN
    length 140
  ENDIF
  FMT(vwl_ru/u#)
endphoneme

phoneme U
  vwl starttype #u endtype #u
  length 100
  IF thisPh(isWordEnd) THEN
    length 140
  ENDIF
  FMT(vowel/uu)
endphoneme


// long vowels

phoneme A
  vwl starttype #a endtype #a
  length 200
  FMT(vowel/aa_9)
endphoneme

phoneme a
  vwl starttype #a endtype #a
  length 200
  FMT(vowel/a_5)
endphoneme

phoneme &
  vwl starttype #a endtype #a
  flag1
  length 200
  FMT(vowel/ee_2)
endphoneme

phoneme e
  vwl starttype #e endtype #e
  length 200
  flag1
  FMT(vdiph2/ii@_2)
endphoneme

phoneme E
  vwl starttype #@ endtype #@
  length 200
  FMT(vowel/e_mid)
endphoneme

phoneme i
  vwl starttype #i endtype #i
  length 180
  FMT(vowel/ii_8)
endphoneme

phoneme o
  vwl starttype #o endtype #o
  length 200
  FMT(vowel/o_3)
endphoneme

phoneme Y
  vwl starttype #@ endtype #@
  length 200
  flag1
  FMT(vowel/y#_4)
endphoneme

phoneme u
  vwl starttype #u endtype #u
  length 200
  FMT(vowel/u_bck3)
endphoneme


// Consonants

phoneme ts
  import_phoneme consonants/ts
endphoneme

phoneme r
  import_phoneme base1/R2
endphoneme

phoneme t
  import_phoneme base2/t
endphoneme

phoneme G
  import_phoneme base1/Q
endphoneme

phoneme X
  vls uvl frc
  lengthmod 3
  Vowelin f1=0  f2=2300 200 400  f3=-100 100
  Vowelout f1=0 f2=2300 300 400  f3=-100 100  rms=20
  lengthmod 3
  WAV(ufric/x2, 60)
endphoneme

phoneme L
  import_phoneme sq/ll
//  import_phoneme base1/l-
endphoneme

phoneme l
  liquid
  IF nextPhW(isFlag1) THEN
  ELSE
    ChangePhoneme(L)  // Hard
  ENDIF
  CALL base1/l
endphoneme
